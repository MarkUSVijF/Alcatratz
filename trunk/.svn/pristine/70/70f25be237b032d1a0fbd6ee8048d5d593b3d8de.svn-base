/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.technikumwien.bic4b18_01.spread.local;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import static java.nio.file.StandardOpenOption.*;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import static net.technikumwien.bic4b18_01.common.assist.LocalNetwork.getMyIPs;
import net.technikumwien.bic4b18_01.common.assist.RUID;
import static net.technikumwien.bic4b18_01.common.assist.TraceHelper.getTrunk;
import net.technikumwien.bic4b18_01.common.rmi.ServerIPs;

/**
 *
 * @author Florian
 */
public class ConfigSetup {

    private static final Logger logger = Logger.getLogger(ConfigSetup.class.getName());

    /**
     *
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        create();
    }

    /**
     * only run after there is a change in either:
     * -) common.settings.servers.txt
     * -) spread daemon localtions (ip)
     */
    public static void create() {
        try {
            File trunk = getTrunk();
            Map<String, Set<String>> spreadAddresses = ServerIPs.spread();
            Set<String> myIPs = getMyIPs();
            byte[] strToBytes;
            Path path;

            // generating content of spread.conf
            String spreadDaemonName = null;
            String content = "";
            for (Entry<String, Set<String>> subNetIPs : spreadAddresses.entrySet()) {
                content += "Spread_Segment  " + subNetIPs.getKey() + " {\n\n";
                for (String ip : subNetIPs.getValue()) {
                    String name = RUID.new_9().toString();
                    if (spreadDaemonName == null && myIPs.contains(ip)) {
                        spreadDaemonName = name;
                    }
                    content += "	" + name + "		" + ip + "\n";
                }
                content += "}\n";
            }
            if (spreadDaemonName == null) {
                logger.log(Level.SEVERE, "could not asign daemon to any IP");
                return;
            }
            List<String> lines = Files.readAllLines(Paths.get(trunk.getPath() + "\\spread\\src\\main\\java\\net\\technikumwien\\bic4b18_01\\spread\\settings\\spreadFlags.txt"));
            content = lines.stream().map((s) -> s + "\n").reduce(content, String::concat);
            // creating spread.conf
            path = Paths.get(trunk.getPath() + "\\spread\\src\\main\\java\\net\\technikumwien\\bic4b18_01\\spread\\local\\spread.conf");
            strToBytes = content.getBytes();
            Files.write(path, strToBytes, CREATE, TRUNCATE_EXISTING, WRITE);
            logger.log(Level.INFO, "spread.config successfully created");

            // cleansing daemon.ip
            path = Paths.get(trunk.getPath() + "\\spread\\src\\main\\java\\net\\technikumwien\\bic4b18_01\\spread\\local\\daemon.ip");
            strToBytes = "".getBytes();
            Files.write(path, strToBytes, CREATE, TRUNCATE_EXISTING, WRITE);
            logger.log(Level.INFO, "daemon.ip successfully created");

        } catch (IOException ex) {
            logger.log(Level.SEVERE, "something went very wrong");
        }
    }
}
